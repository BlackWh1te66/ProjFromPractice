document.addEventListener('DOMContentLoaded', function() {
    // –¢–µ–º–∞
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme === 'dark') {
        document.body.classList.add('dark-theme');
    }

    const themeSwitcher = document.getElementById('themeSwitcher');
    if (themeSwitcher) {
        themeSwitcher.addEventListener('click', function() {
            document.body.classList.toggle('dark-theme');
            const isDark = document.body.classList.contains('dark-theme');
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
            this.textContent = isDark ? '‚òÄÔ∏è' : 'üåì';
        });
        const isDark = document.body.classList.contains('dark-theme');
        themeSwitcher.textContent = isDark ? '‚òÄÔ∏è' : 'üåì';
    }

    // –ü—Ä–æ—Ñ–∏–ª—å–Ω–æ–µ –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é
    const profileDropdownBtn = document.getElementById('profileDropdownBtn');
    const profileDropdownMenu = document.getElementById('profileDropdownMenu');
    if (profileDropdownBtn && profileDropdownMenu) {
        profileDropdownBtn.addEventListener('click', function(e) {
            e.stopPropagation();
            this.parentElement.classList.toggle('open');
        });
        document.addEventListener('click', function(e) {
            if (!profileDropdownBtn.contains(e.target)) {
                profileDropdownBtn.parentElement.classList.remove('open');
            }
        });
    }

    // –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
    if (typeof updatePowerValue === 'function') updatePowerValue();
    if (typeof calculateCost === 'function') calculateCost();

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    const solarForm = document.getElementById('solarForm');
    if (solarForm) {
        solarForm.addEventListener('submit', function(e) {
            e.preventDefault();
            alert('–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É! –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤\'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π.');
            this.reset();
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã –∑–∞—è–≤–∫–∏
    const solarApplication = document.getElementById('solar-application');
    if (solarApplication) {
        solarApplication.addEventListener('submit', async function(e) {
            e.preventDefault();
            const name = document.getElementById('name').value;
            const phone = document.getElementById('phone').value;
            const email = document.getElementById('email').value;
            const location = document.getElementById('location').value;
            const system_config = document.getElementById('system-config').value;
            const message = document.getElementById('message').value;

            try {
                const response = await fetch('/solar-application', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                    },
                    body: JSON.stringify({ name, phone, email, location, system_config, message })
                });
                const data = await response.json();
                if (data.success) {
                    alert('–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É! –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤\'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ—Ç—è–≥–æ–º 1-2 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤.');
                    this.reset();
                } else {
                    alert('–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
                }
            } catch (err) {
                alert('–ü–æ–º–∏–ª–∫–∞ –∑\'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º.');
            }
        });
    }
});

// –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤–∞—Ä—Ç–æ—Å—Ç—ñ –°–ï–°
function updatePowerValue() {
    const powerSlider = document.getElementById('power');
    const powerValue = document.getElementById('power-value');
    powerValue.textContent = powerSlider.value + ' –∫–í—Ç';
}

function calculateCost() {
    const systemType = document.getElementById('system-type').value;
    const power = parseInt(document.getElementById('power').value);
    const roofType = document.getElementById('roof-type').value;
    const battery = document.getElementById('battery').value;
    const brand = document.getElementById('brand').value;
    
    // –ë–∞–∑–æ–≤—ñ —Ü—ñ–Ω–∏ (—É–º–æ–≤–Ω—ñ)
    let basePricePerKw = 1000;
    
    // –ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ –¥–ª—è —Ç–∏–ø—ñ–≤ —Å–∏—Å—Ç–µ–º
    if (systemType === 'hybrid') basePricePerKw *= 1.3;
    if (systemType === 'offgrid') basePricePerKw *= 1.5;
    
    // –ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ –¥–ª—è —Ç–∏–ø—ñ–≤ –ø–æ–∫—Ä—ñ–≤–ª—ñ
    if (roofType === 'tile') basePricePerKw *= 1.1;
    if (roofType === 'flat') basePricePerKw *= 1.15;
    if (roofType === 'ground') basePricePerKw *= 1.2;
    
    // –ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ –¥–ª—è –∞–∫—É–º—É–ª—è—Ç–æ—Ä—ñ–≤
    if (battery === 'small') basePricePerKw += 200;
    if (battery === 'medium') basePricePerKw += 400;
    if (battery === 'large') basePricePerKw += 600;
    
    // –ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏ –¥–ª—è –±—Ä–µ–Ω–¥—ñ–≤
    if (brand === 'premium') basePricePerKw *= 1.4;
    if (brand === 'budget') basePricePerKw *= 0.9;
    
    // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∑–∞–≥–∞–ª—å–Ω–æ—ó –≤–∞—Ä—Ç–æ—Å—Ç—ñ
    const totalCost = power * basePricePerKw;
    
    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    document.getElementById('total-cost').textContent = '$' + totalCost.toLocaleString();
    
    // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ç–µ—Ä–º—ñ–Ω—É –æ–∫—É–ø–Ω–æ—Å—Ç—ñ
    const paybackYears = Math.round(8 - (power / 10));
    document.getElementById('payback').textContent = paybackYears + '-' + (paybackYears + 2) + ' —Ä–æ–∫—ñ–≤';
    
    // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –µ–∫–æ–Ω–æ–º—ñ—ó
    const yearlySavings = power * 200;
    document.getElementById('savings').textContent = '$' + (yearlySavings - 100) + '-$' + (yearlySavings + 200);
    
    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó —É —Ñ–æ—Ä–º—ñ
    let configText = '';
    if (systemType === 'grid') configText = '–ú–µ—Ä–µ–∂–µ–≤–∞ –°–ï–°';
    if (systemType === 'hybrid') configText = '–ì—ñ–±—Ä–∏–¥–Ω–∞ –°–ï–°';
    if (systemType === 'offgrid') configText = '–ê–≤—Ç–æ–Ω–æ–º–Ω–∞ –°–ï–°';
    
    configText += ', ' + power + ' –∫–í—Ç';
    
    if (roofType === 'metal') configText += ', –º–µ—Ç–∞–ª–µ–≤–∞ –ø–æ–∫—Ä—ñ–≤–ª—å';
    if (roofType === 'tile') configText += ', —á–µ—Ä–µ–ø–∏—Ü—è';
    if (roofType === 'flat') configText += ', –ø–ª–æ—Å–∫–∞ –ø–æ–∫—Ä—ñ–≤–ª—å';
    if (roofType === 'ground') configText += ', –≥—Ä—É–Ω—Ç–æ–≤–µ –∫—Ä—ñ–ø–ª–µ–Ω–Ω—è';
    
    if (brand === 'premium') configText += ', Premium –±—Ä–µ–Ω–¥';
    if (brand === 'standard') configText += ', Standard –±—Ä–µ–Ω–¥';
    if (brand === 'budget') configText += ', Budget –±—Ä–µ–Ω–¥';
    
    document.getElementById('system-config').value = configText;
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
updatePowerValue();
calculateCost();